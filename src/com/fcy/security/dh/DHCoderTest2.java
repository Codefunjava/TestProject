package com.fcy.security.dh;

import java.util.Arrays;
import java.util.Map;

import org.junit.Test;

public class DHCoderTest2 {

	/**
	 * 发送数据时，获得了甲方的公钥，能不解密数据
	 * 似乎并不能
	 */
	
	@Test
	public void test() throws Exception{
		byte[] publicKey1 = {48, -127, -33, 48, -127, -105, 6, 9, 42, -122, 72, -122, -9, 13, 1, 3, 1, 48, -127, -119, 2, 65, 0, -4, -90, -126, -50, -114, 18, -54, -70, 38, -17, -52, -9, 17, 14, 82, 109, -80, 120, -80, 94, -34, -53, -51, 30, -76, -94, 8, -13, -82, 22, 23, -82, 1, -13, 91, -111, -92, 126, 109, -10, 52, 19, -59, -31, 46, -48, -119, -101, -51, 19, 42, -51, 80, -39, -111, 81, -67, -60, 62, -25, 55, 89, 46, 23, 2, 64, 103, -124, 113, -78, 122, -100, -12, 78, -23, 26, 73, -59, 20, 125, -79, -87, -86, -14, 68, -16, 90, 67, 77, 100, -122, -109, 29, 45, 20, 39, 27, -98, 53, 3, 11, 113, -3, 115, -38, 23, -112, 105, -77, 46, 41, 53, 99, 14, 28, 32, 98, 53, 77, 13, -94, 10, 108, 65, 110, 80, -66, 121, 76, -92, 2, 2, 1, -128, 3, 67, 0, 2, 64, 15, -82, -97, 118, 26, 127, 41, -54, -9, -34, 48, 110, -54, -106, 81, -18, -9, -100, -123, 18, 6, -58, 100, 70, -84, -14, -128, 90, 33, -61, -59, 121, 105, 88, 98, -98, -111, 82, 45, 18, 5, 112, 90, 6, -16, -44, 22, 73, 124, -92, -120, 50, -36, 63, 63, 121, 3, -51, -39, 49, -87, -117, 127, 62};
		byte[] securityContext = {-106, 58, 106, 21, -120, -22, -120, 122, -83, -38, -94, 92, 65, 57, -20, -67, -97, -53, -16, 89, 33, -69, 103, -22, 124, -117, -68, 110, -33, 57, 4, -88};
		byte[] key = {-47, -24, -117, 32, -71, -5, 50, -17, -85, 57, 109, -29, 116, 64, -39, 99, 99, 87, -46, 88, 31, 74, -52, 32, -5, 82, -39, 11, 45, -58, 15, -91};
		Map<String, Object> keyMap2 = DHCoder.initKey(publicKey1);
		byte[] publicKey2 = DHCoder.getPublicKey(keyMap2);
		byte[] privateKey2 = DHCoder.getPrivateKey(keyMap2);
		byte[] key2 = DHCoder.getSecretKey(publicKey1, privateKey2);
		System.out.println("key：\t" + Arrays.toString(key));
		System.out.println("key2：\t" + Arrays.toString(key2));
		byte[] decode1 = DHCoder.decrypt(securityContext, key2);
		String output1 = new String(decode1);
		System.out.println("解密：\t" + output1);
	}
	
}
